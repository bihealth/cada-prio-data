name: train-model
description: Train CADA model

inputs:
  publish-artifacts:
    default: "false"
    description: "Whether to publish artifacts to the named release"
  release-name:
    description: "The name of the release to publish artifacts to"
  token:
    description: "A Github PAT"
    required: true

runs:
  using: "composite"
  steps:
    - name: Get release version
      id: get-release
      run: echo "release-name=$(cat release-name.txt)" >> $GITHUB_OUTPUT
      # cf. https://github.com/mamba-org/provision-with-micromamba#important
      shell: bash -l {0}

    - name: Check cache JSONL output
      id: check-cache-train-model-output
      uses: actions/cache@v3
      with:
        path: ${{ env.OUTPUT_DIR }}
        key: train-model-${{ env.CACHE_SEED }}-${{ steps.get-release.outputs.release-name }}-${{ env.CADA_PRIO_VERSION }}-${{ env.MAX_RCVS }}-output
        lookup-only: true

    - name: Create requirements.txt
      run: |
        echo cada-prio==${{ env.CADA_PRIO_VERSION }} > requirements.txt
      shell: stdbuf -oL bash -l {0}

    - name: Install python and cache dependencies
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: pip

    - name: Install Python dependencies
      run: pip install -r requirements.txt
      shell: stdbuf -oL bash -l {0}

    - name: Cache the generated JSONL
      if: |
        (steps.check-cache-train-model-output.outputs.cache-hit != 'true') ||
        (inputs.publish-artifacts == 'true')
      uses: actions/cache@v3
      with:
        path: ${{ env.OUTPUT_DIR }}
        key: train-model-${{ env.CACHE_SEED }}-${{ steps.get-release.outputs.release-name }}-${{ env.CADA_PRIO_VERSION }}-${{ env.MAX_RCVS }}-output

    - name: Retrieve cached ClinVar file
      if: |
        (steps.check-cache-train-model-output.outputs.cache-hit != 'true')
      uses: actions/cache@v3
      with:
        path: ${{ env.DOWNLOAD_DIR }}
        key: download-data-${{ env.CACHE_SEED }}-${{ steps.get-release.outputs.release-name }}
        fail-on-cache-miss: true

    - name: Run the model training
      if: steps.check-cache-train-model-output.outputs.cache-hit != 'true'
      run: bash .github/actions/train-model/run.sh
      env:
        RELEASE_NAME: "${{ steps.get-release.outputs.release-name }}"
      shell: stdbuf -oL bash -l {0}

    - name: Publish artifacts
      if: inputs.publish-artifacts == 'true'
      run: |
        set -xv

        version=$(basename ${{ env.OUTPUT_DIR }}/cada-prio-model* | rev | cut -d - -f 1 | rev)

        mkdir -p /tmp/for-upload/cada-prio-model-$version
        cp -r ${{ env.OUTPUT_DIR }}/cada-prio-model-$version/. /tmp/for-upload/cada-prio-model-$version/.
        ls -lhR /tmp/for-upload/cada-prio-model-$version
        tar --directory=/tmp/for-upload --create --owner=0:0 --gzip \
          --file /tmp/for-upload/cada-prio-model-$version.tar.gz \
          cada-prio-model-$version

        pushd /tmp/for-upload
        sha256sum cada-prio-model-$version.tar.gz \
        > cada-prio-model-$version.tar.gz.sha256
        popd

        gh release upload --clobber "cada-prio-data-${{ inputs.release-name }}" \
          /tmp/for-upload/cada-prio-model-$version.tar.gz*
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: stdbuf -oL bash -l {0}
